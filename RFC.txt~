                             RFC For .2.mail

Protocol Designed By: Andrew Calvano and Lukyan Hritsko


---------------------------Protocol Overview----------------------------------

In a world without data centers computers rely on an internet known as the .2. 
Internet.  The .2.mail protocol is a protocol built specifically for this type
of internet and makes some assumptions as a result of this.

Assumption 1.) The sender and receiver each contain the Internet protocol stack. 

Assumption 2.) The sender always knows the IP address of the receiver. 

Assumption 3.) Messages are unformatted ASCII text of no more than 5000 characters including spaces. 

Assumption 4.) A receiver may not always have the .2.mail service running. 

Assumption 5.) A receiver may not always be online. 

Using these assumptions this RFC lays out the implementation notes required
to make a sucessful implementation of the .2.mail protocol.


---------------------Peer Message Exchange and Actions--------------------

This section describes the messages exchanged between two peers in a .2. 
internet using the .2.mail protocol.  We will illustrate with an FSM for
a peer acting as a receiver and a peer acting as a sender.

Sender FSM:

S     |          Send data packet with data size <= 5000, 
      |          hash of message data, and sequence number i
----->|-------------------------------------------------------
Reset |                                                       |
From  |                                                       |
Time  |                                                       |
Out   |<-------------------------------------------------------
      |
      |
      |          Wait for Ack message from recipient with sequence number i + 1,
      |          Start offline timer of 20 seconds, start polling timer of 5 
      |          seconds.  Ignore messages, with invalid sequence numbers.
      |--------------------------------------------------------
      |                                                        |
      |                                                        |
      |<------------------------------------------------------- 
      |
      |

Receiver FSM:




--------------------------------------------------------------------------

                                Message Structure


Data Message


            Bytes 0---2------------------------------34

                 Sequence | hash of message
                    #
            Bytes 34---------------------------------....
		    
                     Message (up to 5000 bytes)

Ack Message
           
            Bytes 0---2---3 
                 Sequence Number | Error Flag





Implementation Notes: Taking into account the assumptions laid out for us
in a .2. Internet network a developer implementing the .2. mail protocol
must also make sure the following requirements are carefully and correctly
fulfilled. An example implementation fulfilling the requirements will follow.





